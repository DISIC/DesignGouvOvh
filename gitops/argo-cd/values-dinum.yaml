## Controller
controller:
  # -- The number of application controller pods to run.
  # If changing the number of replicas you must pass the number as `ARGOCD_CONTROLLER_REPLICAS` as an environment variable
  replicas: 1

## Dex
dex:
  # -- Enable dex
  enabled: false

## Server
server:
  replicas: 1

  # -- Additional command line arguments to pass to Argo CD server
  extraArgs:
    - --insecure
    - --enable-gzip

  ingress:
    # -- Enable an ingress resource for the Argo CD server
    enabled: true
    # -- Defines which ingress controller will implement the resource
    ingressClassName: "nginx"
    # -- Additional ingress annotations
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"

    # -- List of ingress hosts
    ## Argo Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    hosts:
      - gitops.confiture.numerique.gouv.fr
    # -- Ingress TLS configuration
    tls:
      - secretName: argo-cd-tls-certificate
        hosts:
          - gitops.confiture.numerique.gouv.fr

  # dedicated ingress for gRPC as documented at
  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/
  ingressGrpc:
    # -- Enable an ingress resource for the Argo CD server for dedicated [gRPC-ingress]
    enabled: false

  ## Enable Admin ClusterRole resources.
  ## Enable if you would like to grant rights to Argo CD to deploy to the local Kubernetes cluster.
  clusterAdminAccess:
    # -- Enable RBAC for local cluster deployments
    enabled: true

  config:
    url: "https://gitops.confiture.numerique.gouv.fr"
    statusbadge.enabled: "true"
    admin.enabled: "true"

  extensions:
    enabled: false

## Repo Server
repoServer:
  replicas: 1

applicationSet:
  # -- Enable Application Set controller
  enabled: false

## Argo Configs
configs:
  secret:
    # -- Bcrypt hashed admin password
    ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
    ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`
    argocdServerAdminPassword: "$2a$10$l4TSF7pdhGjrLXHOIz8MneXmGq.duo56vv4bItaN8c96zt4rLsMB6"
    # -- Admin password modification time. Eg. `"2006-01-02T15:04:05Z"`
    # @default -- `""` (defaults to current time)
    argocdServerAdminPasswordMtime: "2022-10-12T00:00:00Z"

notifications:
  # -- Enable Notifications controller
  enabled: false

